{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schema.yext.com/config/km/connector",
  "$version": "1",
  "type": "object",
  "additionalProperties": false,
  "title": "Connector",
  "description": "A resource that represents the configuration of a connector.",
  "properties": {
    "$id": {
      "type": "string"
    },
    "$schema": {
      "const": "https://schema.yext.com/config/km/connector/v1"
    },
    "displayName": {
      "type": "string",
      "title": "Display Name",
      "description": "Display name of this connector."
    },
    "entityType": {
      "type": "string",
      "title": "Entity Type",
      "format": "km/entity-type",
      "description": "The entity type which data can be ingested for."
    },
    "source": {
      "type": "object",
      "additionalProperties": false,
      "title": "Source",
      "description": "Represents a combination of the configuration to fetch data \u0026 selectors to extract content from the raw data.",
      "properties": {
        "sourceConfig": {
          "type": "object",
          "additionalProperties": false,
          "title": "Source Configuration",
          "description": "Configuration for various sources of data.",
          "properties": {
            "crawlerConfig": {
              "$ref": "#/definitions/configs/crawlerConfig"
            },
            "apiPullConfig": {
              "$ref": "#/definitions/configs/apiPullConfig"
            },
            "apiPushConfig": {
              "$ref": "#/definitions/configs/apiPushConfig"
            }
          },
          "oneOf": [
            {
              "required": [
                "crawlerConfig"
              ]
            },
            {
              "required": [
                "apiPullConfig"
              ]
            },
            {
              "required": [
                "apiPushConfig"
              ]
            }
          ]
        },
        "baseSelector": {
          "$ref": "#/definitions/selector"
        },
        "selectors": {
          "type": "array",
          "additionalItems": false,
          "title": "Selectors",
          "description": "An ordered list of selectors to apply and extract data.",
          "items": {
            "$ref": "#/definitions/selector"
          }
        }
      },
      "required": [
        "sourceConfig"
      ]
    },
    "mappings": {
      "type": "array",
      "additionalItems": false,
      "title": "Mapping",
      "description": "The mapping generated by the transformers.",
      "items": {
        "$ref": "#/definitions/mapping"
      }
    },
    "scheduleConfig": {
      "type": "object",
      "additionalProperties": false,
      "title": "Schedule Config",
      "description": "The configuration of the run schedule.",
      "properties": {
        "useSourceSchedule": {
          "type": "boolean",
          "title": "Use Source Schedule",
          "description": "Indicates that the Connector should run automatically using the data source\u0027s schedule."
        },
        "customSchedule": {
          "$ref": "#/definitions/customSchedule"
        }
      },
      "oneOf": [
        {
          "required": [
            "useSourceSchedule"
          ]
        },
        {
          "required": [
            "customSchedule"
          ]
        }
      ]
    }
  },
  "required": [
    "$id",
    "$schema",
    "displayName",
    "entityType",
    "source"
  ],
  "definitions": {
    "configs": {
      "crawlerConfig": {
        "type": "object",
        "title": "Crawler Configuration",
        "additionalProperties": false,
        "description": "Configuration used to extract data from the crawler.",
        "properties": {
          "crawler": {
            "type": "string",
            "description": "The reference to the crawler resource.",
            "format": "crawler/site-crawler"
          },
          "urlPatterns": {
            "type": "array",
            "additionalItems": false,
            "title": "URL Patterns",
            "description": "List of URL patterns to extract data for.",
            "items": {
              "type": "string",
              "description": "The URL to extract data for."
            }
          }
        },
        "required": [
          "crawler"
        ]
      },
      "apiPullConfig": {
        "type": "object",
        "title": "API Pull Configuration",
        "additionalProperties": false,
        "description": "Configuration used to connect and pull data from an API.",
        "properties": {
          "requestType": {
            "type": "string",
            "title": "Request Type",
            "description": "The request method type.",
            "enum": [
              "GET"
            ]
          },
          "url": {
            "type": "string",
            "title": "Request URL",
            "description": "The request URL to use."
          },
          "authentication": {
            "type": "object",
            "additionalProperties": false,
            "title": "Authentication",
            "description": "The authentication mechanism to use to connect to the API.",
            "properties": {
              "bearerToken": {
                "type": "string",
                "title": "Bearer Token",
                "description": "A token that will be passed in the authorization header."
              },
              "basicAuthentication": {
                "$ref": "#/definitions/authentications/basicAuthentication"
              },
              "apiKey": {
                "$ref": "#/definitions/authentications/apiKey"
              }
            },
            "oneOf": [
              {
                "required": [
                  "bearerToken"
                ]
              },
              {
                "required": [
                  "basicAuthentication"
                ]
              },
              {
                "required": [
                  "apiKey"
                ]
              }
            ]
          },
          "paginationControl": {
            "type": "object",
            "additionalProperties": false,
            "title": "Pagination Control",
            "description": "The method used for controlling pagination.",
            "properties": {
              "maxPageCount": {
                "type": "number",
                "title": "Max Page Count",
                "description": "Max pages to fetch. If unset, all pages will be fetched."
              },
              "offsetPagination": {
                "$ref": "#/definitions/pagination/offsetPagination"
              },
              "cursor": {
                "$ref": "#/definitions/pagination/cursor"
              }
            },
            "oneOf": [
              {
                "required": [
                  "offsetPagination"
                ]
              },
              {
                "required": [
                  "cursor"
                ]
              }
            ]
          },
          "maxRequestsPerMinute": {
            "type": "number",
            "title": "API Rate Limit",
            "description": "The maximum requests per minute."
          },
          "headers": {
            "type": "object",
            "additionalItems": false,
            "title": "Headers",
            "description": "Map of header keys and values to use in the API request.",
            "patternProperties": {
              "^.*$": {
                "type": "string"
              }
            }
          },
          "queryParams": {
            "type": "object",
            "additionalItems": false,
            "title": "Query Parameters",
            "description": "Map of query parameter keys and values to use in the API request.",
            "patternProperties": {
              "^.*$": {
                "type": "string"
              }
            }
          },
          "dataFormat": {
            "$ref": "#/definitions/dataFormat"
          }
        },
        "required": [
          "requestType",
          "url",
          "dataFormat"
        ]
      },
      "apiPushConfig": {
        "type": "object",
        "title": "API Push Configuration",
        "additionalProperties": false,
        "description": "Configuration used to connect to an app and push data from an API.",
        "properties": {
          "app": {
            "type": "string",
            "description": "The reference to the app resource."
          },
          "dataFormat": {
            "$ref": "#/definitions/dataFormat"
          }
        },
        "required": [
          "app",
          "dataFormat"
        ]
      }
    },
    "authentications": {
      "basicAuthentication": {
        "type": "object",
        "additionalProperties": false,
        "title": "Basic Authentication",
        "description": "Username and password authentication.",
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "The username."
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "The password."
          }
        },
        "required": [
          "username"
        ]
      },
      "apiKey": {
        "type": "object",
        "additionalProperties": false,
        "title": "API Key",
        "description": "An api key will be used to authenticate requests. The API-key can be appended in the header or as a query param depending on the source API.",
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "The key used to send the token."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The API token content."
          },
          "setAsHeader": {
            "type": "boolean",
            "title": "Set As Header",
            "description": "Indicates if the token should be set as a header instead of a query param."
          }
        },
        "required": [
          "key",
          "value",
          "setAsHeader"
        ]
      }
    },
    "pagination": {
      "offsetPagination": {
        "type": "object",
        "additionalProperties": false,
        "title": "Offset Pagination",
        "description": "The offset and limit to page through the API.",
        "properties": {
          "pageKey": {
            "type": "string",
            "title": "Page Key",
            "description": "Pagination key to be used in the request."
          },
          "startOffset": {
            "type": "number",
            "title": "Start Offset",
            "description": "Starting offset. If specified, this value will be used in the request."
          },
          "pageLimitKey": {
            "type": "string",
            "title": "Page Limit Key",
            "description": "The key for the max number of items in the page."
          },
          "defaultPageLimit": {
            "type": "number",
            "title": "Default Page Limit",
            "description": "The default number of entries returned per page."
          },
          "totalPagesKey": {
            "type": "string",
            "title": "Total Pages Key",
            "description": "The key for the total number of pages."
          }
        },
        "required": [
          "pageKey",
          "startOffset"
        ]
      },
      "cursor": {
        "type": "object",
        "additionalProperties": false,
        "title": "Cursor Pagination",
        "description": "The cursor-based pagination.",
        "properties": {
          "pageKey": {
            "type": "string",
            "title": "Page Key",
            "description": "Pagination key to be used in the request."
          },
          "cursor": {
            "type": "string",
            "title": "Cursor",
            "description": "The key path to extract from the response."
          },
          "isUrl": {
            "type": "boolean",
            "title": "Is URL",
            "description": "Indicates if the cursor is a URL."
          }
        },
        "required": [
          "cursor",
          "isUrl"
        ]
      }
    },
    "dataFormat": {
      "type": "string",
      "title": "Data Format",
      "description": "The data format of the response.",
      "enum": [
        "JSON"
      ]
    },
    "mapping": {
      "type": "object",
      "description": "The mapping generated by the transformers.",
      "header": {
        "type": "string",
        "title": "Header",
        "description": "Header of a table."
      },
      "field": {
        "type": "string",
        "title": "Field",
        "description": "The reference to the field resource.",
        "format": "km/field"
      },
      "subfieldPath": {
        "type": "array",
        "additionalItems": false,
        "description": "Path to a particular property or list item index.",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "oneOf": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "A name which identifies a struct value property."
            },
            "index": {
              "type": "number",
              "title": "Index",
              "description": "An index which identifies an item in a list value."
            }
          }
        }
      },
      "required": [
        "header",
        "field"
      ]
    },
    "selector": {
      "type": "object",
      "additionalProperties": false,
      "description": "A selector for extracting content.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of data selector.",
          "enum": [
            "CSS",
            "XPATH",
            "JSON",
            "PAGE_URL",
            "PAGE_TITLE",
            "CLEANED_BODY",
            "PAGE_ID",
            "ITEM_ID"
          ]
        },
        "header": {
          "type": "string",
          "title": "Header",
          "description": "The header used to identify the extracted content."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "The selector content path."
        },
        "mode": {
          "type": "string",
          "description": "The selector mode of a CSS or XPath selector.",
          "enum": [
            "ALL_TEXT",
            "DIRECT_TEXT",
            "INNER_HTML",
            "URL",
            "IMAGE_URL",
            "ATTRIBUTE"
          ]
        },
        "attributeKey": {
          "type": "string",
          "title": "Attribute Key",
          "description": "The attribute key of a CSS or XPath selector."
        }
      },
      "required": [
        "type",
        "header"
      ]
    },
    "customSchedule": {
      "type": "object",
      "title": "Custom Schedule",
      "description": "The custom schedule that the connector will follow. The Connector can be configured to run daily, weekly, monthly or a custom frequency. Currently, this is only supported for API Connectors.",
      "properties": {
        "timeZone": {
          "type": "string",
          "title": "Time Zone",
          "description": "The time zone in ISO-8601 Zone-ID to start a run, i.e. America/New_York."
        },
        "startDate": {
          "type": "string",
          "title": "Start Date",
          "description": "The local date in ISO format to start scheduling runs, i.e. 2021-01-30."
        },
        "startTime": {
          "type": "string",
          "title": "Start Time",
          "description": "The local time in ISO format to start scheduling runs, i.e. 12:00:00."
        },
        "frequencyType": {
          "type": "string",
          "title": "Frequency Type",
          "description": "The schedule config frequency type.",
          "enum": [
            "DAILY",
            "MONTHLY",
            "WEEKLY"
          ]
        },
        "repeatInterval": {
          "type": "number",
          "title": "Repeat interval",
          "description": "The repeat interval based off the schedule config frequency type. If unset, a repeat interval of 1 will be used (e.g. every day)."
        }
      },
      "required": [
        "timeZone",
        "startDate",
        "startTime",
        "frequencyType"
      ]
    }
  }
}